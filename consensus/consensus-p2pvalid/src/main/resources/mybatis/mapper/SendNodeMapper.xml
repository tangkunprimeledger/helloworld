<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mappers.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.higgs.trust.consensus.p2pvalid.dao.SendNodeDao">
    <!-- Result Map -->
    <resultMap id="baseResultMap" type="com.higgs.trust.consensus.p2pvalid.dao.po.SendNodePO">
        <result column="id" property="id" />
        <result column="message_digest" property="messageDigest" />
        <result column="to_node_name" property="toNodeName" />
        <result column="status" property="status" />
        <result column="create_time" property="createTime" />
    </resultMap>
    <!-- send_node table all fields -->
    <sql id="baseColumnList">
        id,message_digest,to_node_name,status,create_time
    </sql>
    <!-- 查询条件 -->
    <sql id="baseWhereClause">
        where 1=1
        <trim suffixOverrides=",">
            <if test="id != null">
                and id=#{id}
            </if>
            <if test="messageDigest != null and messageDigest != ''">
                and message_digest=#{messageDigest}
            </if>
            <if test="toNodeName != null and toNodeName != ''">
                and to_node_name=#{toNodeName}
            </if>
            <if test="status != null">
                and status=#{status}
            </if>
            <if test="createTime != null">
                and create_time=#{createTime}
            </if>
        </trim>
    </sql>
    <!-- 插入记录 -->
    <insert id="add" parameterType="Object">
        insert into
        send_node(id,message_digest,to_node_name,status,create_time)
        values(#{id},#{messageDigest},#{toNodeName},#{status},now())
    </insert>
    <!-- 以上为工具自动生成 -->

    <!-- 根据messageDigest和状态查询列表 -->
    <select id="queryByDigestAndStatus" resultMap="baseResultMap" parameterType="Object">
        select
        <include refid="baseColumnList" />
        from send_node where `message_digest`=#{messageDigest} and `status` = #{status}
    </select>

    <!-- 根据messageDigest和状态查询列表 -->
    <select id="countByDigestAndStatus" resultType="java.lang.Integer" parameterType="Object">
        select count(1)
        from send_node where `message_digest`=#{messageDigest} and `status` = #{status}
    </select>

    <!-- 变更状态 -->
    <update id="transStatus" parameterType="Object">
        update send_node set `status` = #{status} where `message_digest` = #{messageDigest} and `to_node_name` = #{toNodeName} and `status` = #{from}
    </update>

    <!-- 根据messageDigest删除记录 -->
    <delete id="deleteByMessageDigest" parameterType="Object">
        delete from send_node where
        `message_digest` = #{messageDigest}
    </delete>

    <!-- 根据messageDigestList删除记录 -->
    <delete id="deleteByMessageDigestList" parameterType="Object">
        delete from send_node where
        `message_digest` in
        <foreach item="item" index="index" collection="messageDigestList" open="("
                 separator="," close=")">
            #{item}
        </foreach>
    </delete>


</mapper>
